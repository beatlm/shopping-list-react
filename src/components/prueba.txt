'use client'

import { useState } from 'react'
import { initializeApp } from 'firebase/app'
import { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut } from 'firebase/auth'
import { useAuthState } from 'react-firebase-hooks/auth'
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"

// Configura tu objeto firebaseConfig con tus propias credenciales
const firebaseConfig = {
  apiKey: "TU_API_KEY",
  authDomain: "TU_AUTH_DOMAIN",
  projectId: "TU_PROJECT_ID",
  // ... otras configuraciones
}

const app = initializeApp(firebaseConfig)
const auth = getAuth(app)

export default function FirebaseAuth() {
  const [email, setEmail] = useState('')
  const [password, setPassword] = useState('')
  const [user, loading, error] = useAuthState(auth)

  const signIn = () => {
    signInWithEmailAndPassword(auth, email, password)
      .then((userCredential) => {
        console.log('Usuario ha iniciado sesión:', userCredential.user)
      })
      .catch((error) => {
        console.error('Error al iniciar sesión:', error)
      })
  }

  const signUp = () => {
    createUserWithEmailAndPassword(auth, email, password)
      .then((userCredential) => {
        console.log('Usuario registrado:', userCredential.user)
      })
      .catch((error) => {
        console.error('Error al registrar:', error)
      })
  }

  const logOut = () => {
    signOut(auth)
      .then(() => {
        console.log('Usuario ha cerrado sesión')
      })
      .catch((error) => {
        console.error('Error al cerrar sesión:', error)
      })
  }

  if (loading) {
    return <div>Cargando...</div>
  }

  if (error) {
    return <div>Error: {error.message}</div>
  }

  if (user) {
    return (
      <div className="p-4 space-y-4">
        <p>Bienvenido, {user.email}</p>
        <Button onClick={logOut}>Cerrar sesión</Button>
      </div>
    )
  }

  return (
    <div className="p-4 space-y-4">
      <div className="space-y-2">
        <Label htmlFor="email">Correo electrónico</Label>
        <Input
          id="email"
          type="email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          placeholder="correo@ejemplo.com"
        />
      </div>
      <div className="space-y-2">
        <Label htmlFor="password">Contraseña</Label>
        <Input
          id="password"
          type="password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          placeholder="********"
        />
      </div>
      <div className="space-x-2">
        <Button onClick={signIn}>Iniciar sesión</Button>
        <Button onClick={signUp}>Registrarse</Button>
      </div>
    </div>
  )
}